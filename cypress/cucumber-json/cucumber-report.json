[
  {
    "description": "  As a website visitor\n  I want to register on the website\n  So that I can create an account",
    "elements": [
      {
        "description": "",
        "id": "user-registration-form;successful-registration",
        "keyword": "Scenario",
        "line": 9,
        "name": "Successful Registration",
        "steps": [
          {
            "arguments": [],
            "keyword": "Given ",
            "line": 7,
            "name": "I navigate to the registration page",
            "match": {
              "location": "not available:0"
            },
            "result": {
              "status": "passed",
              "duration": 741000000
            }
          },
          {
            "arguments": [
              {
                "rows": [
                  {
                    "cells": [
                      "firstName",
                      "lastName",
                      "username",
                      "email",
                      "password",
                      "phone",
                      "birthday",
                      "gender",
                      "department",
                      "jobTitle"
                    ]
                  },
                  {
                    "cells": [
                      "John",
                      "Doe",
                      "johndoe123",
                      "johndoe@example.com",
                      "Password!123",
                      "571-000-0000",
                      "01/01/1990",
                      "male",
                      "DE",
                      "Developer"
                    ]
                  }
                ]
              }
            ],
            "keyword": "When ",
            "line": 10,
            "name": "I fill the registration form with valid data:",
            "match": {
              "location": "not available:0"
            },
            "result": {
              "status": "passed",
              "duration": 2340000000
            }
          },
          {
            "arguments": [
              {
                "rows": [
                  {
                    "cells": ["C++", "Java", "JavaScript"]
                  }
                ]
              }
            ],
            "keyword": "And ",
            "line": 13,
            "name": "I select the following programming languages:",
            "match": {
              "location": "not available:0"
            },
            "result": {
              "status": "passed",
              "duration": 278000000
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 15,
            "name": "I submit the registration form",
            "match": {
              "location": "not available:0"
            },
            "result": {
              "status": "passed",
              "duration": 206000000
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 16,
            "name": "I should see a successful registration message",
            "match": {
              "location": "not available:0"
            },
            "result": {
              "status": "passed",
              "duration": 18000000
            }
          }
        ],
        "tags": [],
        "type": "scenario"
      }
    ],
    "id": "user-registration-form",
    "line": 1,
    "keyword": "Feature",
    "name": "User Registration Form",
    "tags": [],
    "uri": "features\\registration_form.feature"
  },
  {
    "description": "  As a user of the Reqres API\n  I want to manage user data\n  So that I can perform CRUD operations on users",
    "elements": [
      {
        "description": "",
        "id": "reqres-api-user-management;list-users",
        "keyword": "Scenario",
        "line": 6,
        "name": "List Users",
        "steps": [
          {
            "arguments": [],
            "keyword": "When ",
            "line": 7,
            "name": "I send a request to list users on page 2",
            "match": {
              "location": "not available:0"
            },
            "result": {
              "status": "passed",
              "duration": 180000000
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 8,
            "name": "the response status should be 200",
            "match": {
              "location": "not available:0"
            },
            "result": {
              "status": "passed",
              "duration": 7000000
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 9,
            "name": "the response should include data and page properties",
            "match": {
              "location": "not available:0"
            },
            "result": {
              "status": "passed",
              "duration": 6000000
            }
          }
        ],
        "tags": [],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "reqres-api-user-management;get-user-details",
        "keyword": "Scenario",
        "line": 11,
        "name": "Get User Details",
        "steps": [
          {
            "arguments": [],
            "keyword": "When ",
            "line": 12,
            "name": "I send a request to get details for user with ID 2",
            "match": {
              "location": "not available:0"
            },
            "result": {
              "status": "passed",
              "duration": 33000000
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 13,
            "name": "the response status should be 200",
            "match": {
              "location": "not available:0"
            },
            "result": {
              "status": "passed",
              "duration": 4000000
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 14,
            "name": "the response should include user data",
            "match": {
              "location": "not available:0"
            },
            "result": {
              "status": "passed",
              "duration": 4000000
            }
          }
        ],
        "tags": [],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "reqres-api-user-management;user-not-found",
        "keyword": "Scenario",
        "line": 16,
        "name": "User Not Found",
        "steps": [
          {
            "arguments": [],
            "keyword": "When ",
            "line": 17,
            "name": "I send a request to get details for user with ID 23",
            "match": {
              "location": "not available:0"
            },
            "result": {
              "status": "passed",
              "duration": 33000000
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 18,
            "name": "the response status should be 404",
            "match": {
              "location": "not available:0"
            },
            "result": {
              "status": "passed",
              "duration": 5000000
            }
          }
        ],
        "tags": [],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "reqres-api-user-management;create-new-user",
        "keyword": "Scenario",
        "line": 20,
        "name": "Create New User",
        "steps": [
          {
            "arguments": [
              {
                "rows": [
                  {
                    "cells": ["name", "job"]
                  },
                  {
                    "cells": ["morpheus", "leader"]
                  }
                ]
              }
            ],
            "keyword": "When ",
            "line": 21,
            "name": "I send a request to create a user with the following data:",
            "match": {
              "location": "not available:0"
            },
            "result": {
              "status": "passed",
              "duration": 194000000
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 24,
            "name": "the response status should be 201",
            "match": {
              "location": "not available:0"
            },
            "result": {
              "status": "passed",
              "duration": 5000000
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 25,
            "name": "the response should include id and createdAt properties",
            "match": {
              "location": "not available:0"
            },
            "result": {
              "status": "passed",
              "duration": 7000000
            }
          }
        ],
        "tags": [],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "reqres-api-user-management;update-user-using-put",
        "keyword": "Scenario",
        "line": 27,
        "name": "Update User Using PUT",
        "steps": [
          {
            "arguments": [
              {
                "rows": [
                  {
                    "cells": ["name", "job"]
                  },
                  {
                    "cells": ["morpheus", "zion resident"]
                  }
                ]
              }
            ],
            "keyword": "When ",
            "line": 28,
            "name": "I send a PUT request to update user with ID 2 with the following data:",
            "match": {
              "location": "not available:0"
            },
            "result": {
              "status": "passed",
              "duration": 208000000
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 31,
            "name": "the response status should be 200",
            "match": {
              "location": "not available:0"
            },
            "result": {
              "status": "passed",
              "duration": 6000000
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 32,
            "name": "the response should include updatedAt property",
            "match": {
              "location": "not available:0"
            },
            "result": {
              "status": "passed",
              "duration": 4000000
            }
          }
        ],
        "tags": [],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "reqres-api-user-management;update-user-using-patch",
        "keyword": "Scenario",
        "line": 34,
        "name": "Update User Using PATCH",
        "steps": [
          {
            "arguments": [
              {
                "rows": [
                  {
                    "cells": ["name", "job"]
                  },
                  {
                    "cells": ["morpheus", "zion resident"]
                  }
                ]
              }
            ],
            "keyword": "When ",
            "line": 35,
            "name": "I send a PATCH request to update user with ID 2 with the following data:",
            "match": {
              "location": "not available:0"
            },
            "result": {
              "status": "passed",
              "duration": 185000000
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 38,
            "name": "the response status should be 200",
            "match": {
              "location": "not available:0"
            },
            "result": {
              "status": "passed",
              "duration": 5000000
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 39,
            "name": "the response should include updatedAt property",
            "match": {
              "location": "not available:0"
            },
            "result": {
              "status": "passed",
              "duration": 6000000
            }
          }
        ],
        "tags": [],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "reqres-api-user-management;delete-user",
        "keyword": "Scenario",
        "line": 41,
        "name": "Delete User",
        "steps": [
          {
            "arguments": [],
            "keyword": "When ",
            "line": 42,
            "name": "I send a request to delete user with ID 2",
            "match": {
              "location": "not available:0"
            },
            "result": {
              "status": "passed",
              "duration": 187000000
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 43,
            "name": "the response status should be 204",
            "match": {
              "location": "not available:0"
            },
            "result": {
              "status": "passed",
              "duration": 5000000
            }
          }
        ],
        "tags": [],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "reqres-api-user-management;successful-registration",
        "keyword": "Scenario",
        "line": 45,
        "name": "Successful Registration",
        "steps": [
          {
            "arguments": [
              {
                "rows": [
                  {
                    "cells": ["email", "password"]
                  },
                  {
                    "cells": ["eve.holt@reqres.in", "pistol"]
                  }
                ]
              }
            ],
            "keyword": "When ",
            "line": 46,
            "name": "I send a registration request with the following data:",
            "match": {
              "location": "not available:0"
            },
            "result": {
              "status": "passed",
              "duration": 187000000
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 49,
            "name": "the response status should be 200",
            "match": {
              "location": "not available:0"
            },
            "result": {
              "status": "passed",
              "duration": 6000000
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 50,
            "name": "the response should include token and id properties",
            "match": {
              "location": "not available:0"
            },
            "result": {
              "status": "passed",
              "duration": 5000000
            }
          }
        ],
        "tags": [],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "reqres-api-user-management;failed-registration",
        "keyword": "Scenario",
        "line": 52,
        "name": "Failed Registration",
        "steps": [
          {
            "arguments": [
              {
                "rows": [
                  {
                    "cells": ["email"]
                  },
                  {
                    "cells": ["sydney@fife"]
                  }
                ]
              }
            ],
            "keyword": "When ",
            "line": 53,
            "name": "I send an invalid registration request with the following data:",
            "match": {
              "location": "not available:0"
            },
            "result": {
              "status": "passed",
              "duration": 184000000
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 56,
            "name": "the response status should be 400",
            "match": {
              "location": "not available:0"
            },
            "result": {
              "status": "passed",
              "duration": 5000000
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 57,
            "name": "the response should include error property",
            "match": {
              "location": "not available:0"
            },
            "result": {
              "status": "passed",
              "duration": 5000000
            }
          }
        ],
        "tags": [],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "reqres-api-user-management;successful-login",
        "keyword": "Scenario",
        "line": 59,
        "name": "Successful Login",
        "steps": [
          {
            "arguments": [
              {
                "rows": [
                  {
                    "cells": ["email", "password"]
                  },
                  {
                    "cells": ["eve.holt@reqres.in", "cityslicka"]
                  }
                ]
              }
            ],
            "keyword": "When ",
            "line": 60,
            "name": "I send a login request with the following data:",
            "match": {
              "location": "not available:0"
            },
            "result": {
              "status": "passed",
              "duration": 187000000
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 63,
            "name": "the response status should be 200",
            "match": {
              "location": "not available:0"
            },
            "result": {
              "status": "passed",
              "duration": 5000000
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 64,
            "name": "the response should include token property",
            "match": {
              "location": "not available:0"
            },
            "result": {
              "status": "passed",
              "duration": 5000000
            }
          }
        ],
        "tags": [],
        "type": "scenario"
      },
      {
        "description": "",
        "id": "reqres-api-user-management;failed-login",
        "keyword": "Scenario",
        "line": 66,
        "name": "Failed Login",
        "steps": [
          {
            "arguments": [
              {
                "rows": [
                  {
                    "cells": ["email"]
                  },
                  {
                    "cells": ["peter@klaven"]
                  }
                ]
              }
            ],
            "keyword": "When ",
            "line": 67,
            "name": "I send an invalid login request with the following data:",
            "match": {
              "location": "not available:0"
            },
            "result": {
              "status": "passed",
              "duration": 197000000
            }
          },
          {
            "arguments": [],
            "keyword": "Then ",
            "line": 70,
            "name": "the response status should be 400",
            "match": {
              "location": "not available:0"
            },
            "result": {
              "status": "passed",
              "duration": 4000000
            }
          },
          {
            "arguments": [],
            "keyword": "And ",
            "line": 71,
            "name": "the response should include error property",
            "match": {
              "location": "not available:0"
            },
            "result": {
              "status": "passed",
              "duration": 5000000
            }
          }
        ],
        "tags": [],
        "type": "scenario"
      }
    ],
    "id": "reqres-api-user-management",
    "line": 1,
    "keyword": "Feature",
    "name": "Reqres API User Management",
    "tags": [],
    "uri": "features\\user.feature"
  }
]
